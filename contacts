import csv


def display_contacts(people_):
    for key_ in people_.keys():
        display_one_person(people_, key_)



def search_by_phone(people):
    print("Please enter town to filter:", end="")
    key_to_find = input()
    # todo
    flag = 0
    if key_to_find in people.keys():
        display_one_person(people, key_to_find)
        flag =1
    if not flag:
        print("Not Found")


def search_by_name(people):
    print("Please enter town to filter:", end="")
    value_to_find = input()
    flag = 0
    for key, values_d in people:
        if people[key]["Name"] == value_to_find:
            flag = 1
            display_one_person(people, key)
        break
    if not flag:
        print("Not Found")

def display_one_person(people_, key_):
    val1 = "Name"
    val2 = "Town"
    val3 = "Phone"
    print(f"Name: {people_[key_][val1]}")
    print(f"Town: {people_[key_][val2]}")
    print(f"Town: {people_[key_][val3]}")

def search_by_town(people):
    print("Please enter town to filter:", end="")
    town_to_find = input()
    flag = 0
    for key, values_d in people:
        if people[key]["Town"] == town_to_find:
            flag = 1
            display_one_person(people, key)
        break
    if not flag:
        print("Not Found")


def add_contact(people_, phone_, name_, town_, phone_row_):
    people_[phone_] = {"Name": name_, "Town": town_, "Phone": phone_row_}



def insert_new_contact(people):
    print("Please enter 'Name':", end="")
    name = input()
    if not name.isalpha():
        print("The 'Name' is not valid. No contact inserted.")
        return 0
    print("Please enter 'Town':", end="")
    town = input()
    if not town.isalpha():
        print("The 'Town' is not valid, No contact inserted.")
        return 0
    print("Please enter 'phone number':", end="")
    phone_row = input()
    phone = ""
    for symbol1 in phone_row:
        if symbol1 == "/" or symbol1 == "+" or symbol1 == " ":
            continue
        phone += symbol1
    if not phone.isdigit():
        print("The 'Phone' is not valid, No contact inserted.")
        return 0
    add_contact(people, int(phone), name, town, phone_row)
    return 1


def delete_contact(people):
    return "delete_contact"


def update_contact(people):
    return "update_contact"


def display_go_menu():
    print("press a key to go to Menu")


def display_menu():
    print("Menu:")
    print("1.Search by name")
    print("2.Search by town")
    print("3.Search by phone number")
    print("4.Display all contacts")
    print("5.Insert new contacts")
    print("6.Delete contact")
    print("7.Update contact")
    print("8.End")


def process_choice(choice, dict):

    switcher = {
        1: search_by_name,
        2: search_by_town,
        3: search_by_phone,
        4: display_contacts,
        5: insert_new_contact,
        6: delete_contact,
        7: update_contact
    }

    func = switcher.get(int(choice), "nothing")
    if func != "nothing":
        func(dict)
    print(f"Your choice is {choice}")
    display_go_menu()


#    Format
#    dict_persons = {<phone as digits>: {  "Name": <Name1>,
#                                          "Town": <Town1>,
#                                          "Phone": <Phone row format>
#                                       }
#                    }
def load_data_from_file(people):
    try:
        f = open("contacts.csv", "r")
        reader = csv.reader(f)

        for row in reader:
            people[row[0]] = {"Name": row[1], "Town": row[2], "Phone": row[3]}
    except FileNotFoundError:
        return 0;


# Save dictionary
def save_data_to_file(people):
    csv_columns = ['ID', 'Name', "Town", "Phone"]
    try:
        with open("contacts.csv", 'w') as f:
            writer = csv.DictWriter(f, fieldnames=csv_columns)
            writer.writeheader()
            for data in people:
                writer.writerow(data)
        print("Your data is saved")
    except IOError:
        print("I/O error")


if __name__ == "__main__":
    data_dict = {}
    load_data_from_file(data_dict)
    your_choice = 0
    while your_choice != 8:
        display_menu()
        your_choice = input()
        if your_choice not in ('1', '2', '3', '4', '5', '6', '7', '8'):
            print("Please, enter a value between 1 and 8")
            continue
        process_choice(your_choice, data_dict)
        your_choice = input()
    save_data_to_file(data_dict)
