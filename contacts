"""
–ï—Ç–æ –∫–∞–∫–≤–æ —Ç—Ä—è–±–≤–∞ –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏–º:

–ë–∞–∑–∞ –æ—Ç –¥–∞–Ω–Ω–∏ –∑–∞ —Ö–æ—Ä–∞. –ü—ä—Ä–≤–∞—Ç–∞ –Ω–∏ –∞–ø–ª–∏–∫–∞—Ü–∏—è —â–µ –±—ä–¥–µ –∫–æ–Ω–∑–æ–ª–Ω–∞ –∏ –º–æ–∂–µ –±–∏ —â–µ –±—ä–¥–µ –ø–æ—Å–ª–µ–¥–Ω–∞—Ç–∞ —Ç–∞–∫–∞–≤–∞,
–∞–∫–æ —Å–µ —Å–ø—Ä–∞–≤–∏–º –¥–æ–±—Ä–µ. –ö–æ–≥–∞—Ç–æ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ –∏–∑–ø–∏—à–∞—Ç –≤—ä–∑–º–æ–∂–Ω–∏ –æ–ø—Ü–∏–∏ –Ω–∞ –∫–æ–Ω–∑–æ–ª–∞—Ç–∞:

1. –¢—ä—Ä—Å–∏ –ø–æ –∏–º–µ

2. –¢—ä—Ä—Å–∏ –ø–æ –≥—Ä–∞–¥

3. –¢—ä—Ä—Å–∏ –ø–æ –Ω–æ–º–µ—Ä

4. –í–∏–∂ –≤—Å–∏—á–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∏

5. –î–æ–±–∞–≤–∏ –Ω–æ–≤ –∫–æ–Ω—Ç–∞–∫—Ç

–ó–∞–ø–æ—á–≤–∞–º –æ—Ç–∑–∞–¥ –Ω–∞–ø—Ä–µ–¥. –ö–æ–≥–∞—Ç–æ –≤—ä–≤–µ–¥–∞ 5 –Ω–∞ –∫–æ–Ω–∑–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –º–µ –ø–æ–ø–∏—Ç–∞ –∑–∞ –∏–º–µ –Ω–∞ —á–æ–≤–µ–∫–∞, —Å–ª–µ–¥ —Ç–æ–≤–∞
–∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –Ω–æ–º–µ—Ä –∏ –Ω–∞–∫—Ä–∞—è –∑–∞ –≥—Ä–∞–¥. –°–ª–µ–¥ –∫–∞—Ç–æ –≤—ä–≤–µ–¥–∞ –∏ —Ç—Ä–∏—Ç–µ —Ç—Ä—è–±–≤–∞ –¥–∞ –º–∏ –∏–∑–ø–∏—à–µ, —á–µ –µ —É—Å–ø–µ—à–Ω–æ
–∑–∞–ø–∏—Å–∞–Ω –∏ –¥–∞ –º–∏ –¥–∞–¥–µ —Å–∞–º–æ –µ–¥–∏–Ω –∏–∑–±–æ—Ä - –æ—Ç–∏–¥–∏ –∫—ä–º –æ—Å–Ω–æ–≤–Ω–æ –º–µ–Ω—é - —Ç–∞–º –¥–∞ —Å–∞ –æ—Ç–Ω–æ–≤–æ —Å—ä—â–∏—Ç–µ 5 –≤—ä–ø—Ä–æ—Å–∞.
–ê–∫–æ –∏–∑–∫–ª—é—á–∞ –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞ –∏ —è —Å—Ç–∞—Ä—Ç–∏—Ä–∞–º –±–µ–∑ –¥–∞ –≤—ä–≤–µ–∂–¥–∞–º –Ω–∏—â–æ –∏ –Ω–∞—Ç–∏—Å–Ω–∞ –æ–ø—Ü–∏—è 4 —Ç—Ä—è–±–≤–∞ –¥–∞ –º–∏ —Å–µ –∏–∑–∫–∞—Ä–∞
–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞ –∑–∞ —Ç–æ–∑–∏ —á–æ–≤–µ–∫.

–ü—Ä–æ–±–ª–µ–º - —Ç—Ä—è–±–≤–∞ –¥–∞ –æ–±—Å—ä–¥–∏—Ç–µ –∫—ä–¥–µ –º–æ–∂–µ –¥–∞ –∑–∞–ø–∏—à–µ—Ç–µ —Ç–∞–∑–∏ –∏–Ω—Ñ–æ—Ä–∞—Ü–∏—è, —Ç–∞–∫–∞ —á–µ –¥–∞ –µ –¥–æ—Å—Ç—ä–ø–Ω–∞ –∏ —Å–ª–µ–¥
–∏–∑–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞?

–¢—Ä—è–±–≤–∞ –¥–∞ —Ä–µ—à–∏—Ç–µ –∫–æ—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –µ –Ω–∞–π-–ø–æ–¥—Ö–æ–¥–∞—â–∞ –¥–∞ –ø–∞–∑–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –¥–∞–¥–µ–Ω –∫–æ–Ω—Ç–∞–∫—Ç
(–∏–º–µ, —Ç–µ–ª–µ—Ñ–æ–Ω, –≥—Ä–∞–¥)

–ü—ä—Ä–≤–∏—Ç–µ —Ç—Ä–∏ –æ–ø—Ü–∏–∏ —Å–∞ –∏–∑–ø–æ–∑–ª–≤–∞–Ω–µ –Ω–∞ —Ñ–∏–ª—Ç–µ—Ä —Ñ—É–Ω–∫—Ü–∏—è - –≤—ä—Ä—Ö—É –ª–∏—Å—Ç, –∞ –∫–æ–µ –µ –ª–∏—Å—Ç–∞ –≤ —Å–ª—É—á–∞—è –∏ –ª–∏—Å—Ç –æ—Ç
–∫–∞–∫–≤–æ –µ? üôÇ

–ö–æ–ª–∫–æ—Ç–æ –ø—ä—Ç–∏ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–º –∏ –∑–∞–ø–∏—Å–≤–∞–º –∫–æ–Ω—Ç–∞–∫—Ç–∏ –≤—Å–∏—á–∫–∏ —Å—Ç–∞—Ä–∏, –∫–æ–∏—Ç–æ –≤–µ—á–µ —Å–∞ –∑–∞–ø–∏—Å–∞–Ω–∏ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ
–ø–æ—è–≤—è–≤–∞—Ç.

–î–û–ü–™–õ–ù–ò–¢–ï–õ–ù–ò –§–£–ù–ö–¶–ò–û–ù–ê–õ–ù–û–°–¢–ò (–Ω–µ–∞–∑–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏);

- –¥–∞ –∏–∑—Ç—Ä–∏–≤–∞—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç

- –¥–∞ —ä–ø–¥–µ–π—Ç–≤–∞—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç

–ê–∫–æ –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä–∞—Ç–µ —Ç–µ–∑–∏ - –∫–∞–∫ —â–µ –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ —Ç–∞–∫–∞, —á–µ –∞–∫–æ –∏–º–∞—Ç–µ —á–æ–≤–µ–∫ —Å –µ–¥–Ω–æ –∏ —Å—ä—â–æ –∏–º–µ –∏ –æ—Ç –µ–¥–∏–Ω –≥—Ä–∞–¥
–¥–∞ –±—ä–¥–∞—Ç —Ä–∞–∑–ª–∏—á–µ–Ω–∏-–∫–æ–µ –µ —É–Ω–∏–∫–∞–ª–Ω–æ—Ç–æ –Ω–µ—â–æ –∑–∞ –≤—Å–µ–∫–∏ –µ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç (–ø–æ–º–∏—Å–ª–µ—Ç–µ —Ä–µ–∞–ª–Ω–æ –∫–æ–µ –Ω–∞–∏—Å—Ç–∏–Ω–∞ –µ
—É–Ω–∏–∫–∞–ª–Ω–æ –∑–∞ –≤—Å–µ–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç)

–ò–¥–µ—è—Ç–∞ –Ω–∞ –ø–æ–ø—ä–ª–≤–∞–Ω–µ—Ç–æ –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏ –µ –¥—Ä—É–≥–∞—Ç–∞ —Å–µ–¥–º–∏—Ü–∞ –≤ –ø–æ–Ω–µ–¥–µ–ª–Ω–∏–∫ –≤—Å–µ–∫–∏ –µ–∫–∏–ø –¥–∞ –ø–æ–ª—É—á–∏ –≤—ä–ø—Ä–æ—Å–∏—Ç–µ –∏
–∫–æ–¥–∞ –Ω–∞ –¥—Ä—É–≥–∏—è –µ–∫–∏–ø, –∑–∞ –¥–∞ –Ω–∞—É—á–∏ –Ω–æ–≤–∏ –ø–æ–¥—Ö–æ–¥–∏ –ø—Ä–∏ —Ç—ä—Ä—Å–µ–Ω–µ—Ç–æ –∏ –¥–∞ —Ä–∞–∑–≥–ª–µ–¥–∞ –∫–æ–¥–∞ –Ω–∞–ø–∏—Å–∞–Ω –æ—Ç —Å—ä–≤—Å–µ–º
—Ä–∞–∑–ª–∏—á–µ–Ω –µ–∫–∏–ø.

–¶–ï–õ - –¥–∞ —Å–µ —Å—Ä–∞–±–æ—Ç–∏–º —Å —Ä–∞–∑–ª–∏—á–Ω–∏—Ç–µ —Ö–æ—Ä–∞ –æ—Ç –µ–∫–∏–ø–∞ –Ω–∏ –∏ –¥–∞ —Å–µ —É—á–∏–º –∏ –≤–∑–∏–º–∞–º–µ –∏–¥–µ–∏ –æ—Ç –¥—Ä—É–≥–∏—Ç–µ –µ–∫–∏–ø–∏.

–ü–æ–¥—Ö–æ–¥–∏:

–º–æ–∂–µ—Ç–µ –¥–∞ –ø–∏—à–µ—Ç–µ –∑–∞–µ–¥–Ω–æ –∏–ª–∏ –ø–æ –æ—Ç–¥–µ–ª–Ω–æ, –∞–∫–æ –Ω–µ —É—Å–ø–µ–µ—Ç–µ –¥–∞ —Å–µ —Å–ø—Ä–∞–≤–∏—Ç–µ —Å –¥–∞–¥–µ–Ω –ø—Ä–æ–±–ª–µ–º –ø–æ –µ–∫–∏–ø–∞,
–º–æ–∂–µ—Ç–µ –¥–∞ –ø–æ—Å—Ç–Ω–µ—Ç–µ –ø–æ—Å—Ç –≤ –≥—Ä—É–ø–∞—Ç–∞. –ú–æ–∂–µ—Ç–µ –¥–∞ –¥–æ–∏–∑–º–∏—Å–ª—è—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç–∏ –∞–∫–æ –∏–º–∞—Ç–µ –≤—Ä–µ–º–µ –¥–∞ –≥–∏
–∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä–∞—Ç–µ. –ú–æ–∂–µ—Ç–µ –¥–∞ –ø–æ–ª–∑–≤–∞—Ç–µ –≤—Å—è–∫–∞–∫–≤–∏ –∏–∑—Ç–æ—á–Ω–∏—Ü–∏, –≤–∏–¥–µ–∞ —Ç—É—Ç–æ—Ä–∏–∞–ª–∏, —Å–∞–π—Ç–æ–≤–µ –∏ —Ç.–Ω. - –∞–∫–æ
—Å–º–µ—Ç–Ω–µ—Ç–µ —á–µ —Å–∞ –ø–æ–ª–µ–∑–Ω–∏ –º–æ–∂–µ—Ç–µ –¥–∞ –≥–æ –≤–∫–∞—Ä–∞—Ç–µ –∫–∞—Ç–æ –ª–∏–Ω–∫–æ–≤–µ –∏ –≤—ä–≤ –≤—ä–ø—Ä–æ—Å–∏—Ç–µ.
"""

import csv


def display_contacts(people_):
    for key_ in people_.keys():
        display_one_person(people_, key_)



def search_by_phone(people):
    print("Please enter town to filter:", end="")
    key_to_find = input()
    # todo
    flag = 0
    if key_to_find in people.keys():
        display_one_person(people, key_to_find)
        flag =1
    if not flag:
        print("Not Found")


def search_by_name(people):
    print("Please enter town to filter:", end="")
    value_to_find = input()
    flag = 0
    for key, values_d in people:
        if people[key]["Name"] == value_to_find:
            flag = 1
            display_one_person(people, key)
        break
    if not flag:
        print("Not Found")

def display_one_person(people_, key_):
    val1 = "Name"
    val2 = "Town"
    val3 = "Phone"
    print(f"Name: {people_[key_][val1]}")
    print(f"Town: {people_[key_][val2]}")
    print(f"Town: {people_[key_][val3]}")

def search_by_town(people):
    print("Please enter town to filter:", end="")
    town_to_find = input()
    flag = 0
    for key, values_d in people:
        if people[key]["Town"] == town_to_find:
            flag = 1
            display_one_person(people, key)
        break
    if not flag:
        print("Not Found")


def add_contact(people_, phone_, name_, town_, phone_row_):
    people_[phone_] = {"Name": name_, "Town": town_, "Phone": phone_row_}



def insert_new_contact(people):
    print("Please enter 'Name':", end="")
    name = input()
    if not name.isalpha():
        print("The 'Name' is not valid. No contact inserted.")
        return 0
    print("Please enter 'Town':", end="")
    town = input()
    if not town.isalpha():
        print("The 'Town' is not valid, No contact inserted.")
        return 0
    print("Please enter 'phone number':", end="")
    phone_row = input()
    phone = ""
    for symbol1 in phone_row:
        if symbol1 == "/" or symbol1 == "+" or symbol1 == " ":
            continue
        phone += symbol1
    if not phone.isdigit():
        print("The 'Phone' is not valid, No contact inserted.")
        return 0
    add_contact(people, int(phone), name, town, phone_row)
    return 1


def delete_contact(people):
    return "delete_contact"


def update_contact(people):
    return "update_contact"


def display_go_menu():
    print("press a key to go to Menu")


def display_menu():
    print("Menu:")
    print("1.Search by name")
    print("2.Search by town")
    print("3.Search by phone number")
    print("4.Display all contacts")
    print("5.Insert new contacts")
    print("6.Delete contact")
    print("7.Update contact")
    print("8.End")


def process_choice(choice, dict):

    switcher = {
        1: search_by_name,
        2: search_by_town,
        3: search_by_phone,
        4: display_contacts,
        5: insert_new_contact,
        6: delete_contact,
        7: update_contact
    }

    func = switcher.get(int(choice), "nothing")
    if func != "nothing":
        func(dict)
    print(f"Your choice is {choice}")
    display_go_menu()


#    Format
#    dict_persons = {<phone as digits>: {  "Name": <Name1>,
#                                          "Town": <Town1>,
#                                          "Phone": <Phone row format>
#                                       }
#                    }
def load_data_from_file(people):
    try:
        f = open("contacts.csv", "r")
        reader = csv.reader(f)

        for row in reader:
            people[row[0]] = {"Name": row[1], "Town": row[2], "Phone": row[3]}
    except FileNotFoundError:
        return 0;


# Save dictionary
def save_data_to_file(people):
    csv_columns = ['ID', 'Name', "Town", "Phone"]
    try:
        with open("contacts.csv", 'w') as f:
            writer = csv.DictWriter(f, fieldnames=csv_columns)
            writer.writeheader()
            for data in people:
                writer.writerow(data)
        print("Your data is saved")
    except IOError:
        print("I/O error")


if __name__ == "__main__":
    data_dict = {}
    load_data_from_file(data_dict)
    your_choice = 0
    while your_choice != 8:
        display_menu()
        your_choice = input()
        if your_choice not in ('1', '2', '3', '4', '5', '6', '7', '8'):
            print("Please, enter a value between 1 and 8")
            continue
        process_choice(your_choice, data_dict)
        your_choice = input()
    save_data_to_file(data_dict)
